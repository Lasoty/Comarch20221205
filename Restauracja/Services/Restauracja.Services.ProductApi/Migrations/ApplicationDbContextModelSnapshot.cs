// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restauracja.Services.ProductApi.Data;

#nullable disable

namespace Restauracja.Services.ProductApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Restauracja.Services.ProductApi.Model.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryName = "Appetizer",
                            Description = "Description",
                            ImageUrl = "",
                            Name = "Samosa",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 2L,
                            CategoryName = "Appetizer",
                            Description = "Description",
                            ImageUrl = "",
                            Name = "Paneer Tikka",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 3L,
                            CategoryName = "Dessert",
                            Description = "Description",
                            ImageUrl = "",
                            Name = "Sweet Pie",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 4L,
                            CategoryName = "Entree",
                            Description = "Description",
                            ImageUrl = "",
                            Name = "Bread",
                            Price = 0.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
